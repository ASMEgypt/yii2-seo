<?php
/**
 */

namespace execut\seo\models;


use execut\crudFields\Behavior;
use execut\crudFields\BehaviorStub;
use execut\crudFields\fields\NumberField;
use execut\crudFields\ModelsHelperTrait;
use execut\pages\models\Page;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;

class Keyword extends ActiveRecord
{
    use BehaviorStub, ModelsHelperTrait;
    const MODEL_NAME = '{n,plural,=0{Keywords} =1{Keyword} other{Keywords}}';
    public static function tableName()
    {
        return 'seo_keywords';
    }

    public function beforeValidate()
    {
        $this->name = mb_strtolower($this->name);

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public function rules()
    {
        return ArrayHelper::merge($this->getBehavior('fields')->rules(), [
            ['name', 'unique'],
        ]);
    }

    public function behaviors()
    {
        return [
            'fields' => [
                'class' => Behavior::class,
                'fields' => $this->getStandardFields(['visible'], [
                    'popularity' => [
                        'class' => NumberField::class,
                        'attribute' => 'popularity',
                    ],
                    'results_count' => [
                        'class' => NumberField::class,
                        'attribute' => 'results_count',
                    ],
                    'words_count' => [
                        'class' => NumberField::class,
                        'attribute' => 'words_count',
                    ],
                ]),
            ],
        ];
    }

    public function getPages() {
        return $this->hasMany(Page::className(), [
            'id' => 'pages_page_id',
        ])->via('vsPages');
    }

    public function getVsPages() {
        return $this->hasMany(KeywordVsPage::class, [
            'seo_keyword_id' => 'id'
        ]);
    }
}